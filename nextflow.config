
manifest{
    name = 'CycloSeq'
    description = 'Collection of pipelines to process Cyclomics CyclomicSeq data.'
    author = 'Dami Rebergen'
    homePage = 'http://cyclomics.com'
    defaultBranch = 'main'
    version = '0.2.0'
}

default_container = 'damicyclomics/cyclomicseq:0.0.2'
params.conda_env = 'environment.yml'
default_cycas_container_location = '/cycas/cycas.py'
minionqc_location = 'MinIONQC.R'
cpu_usage_max = 16
mem_gb_max = 4

profiles{

  docker{
    process.container = default_container
    docker.enabled = true
    params.cycas_location = default_cycas_container_location
    params.minionqc_location = minionqc_location


  }
  singularity{
    process.container = default_container
    singularity.enabled = true
    params.cycas_location = default_cycas_container_location
    params.minionqc_location = minionqc_location

  }
  conda{
    process.conda = params.conda_env
    params.cycas_location = "${projectDir}/Cycas/cycas/cycas.py"
    params.minionqc_location = 'MinIONQC.R'
  }
  economy_mode{
    cpu_usage_max = 2
    mem_gb_max = 4
  }
}

process{
  withLabel: many_cpu_intensive {
    cpus   = 2
    memory = 8.GB
  }
  withLabel: minimap_large {
    cpus   = (cpu_usage_max < 4 ? cpu_usage_max : 4)
    memory = (mem_gb_max < 12 ? "${mem_gb_max}.gb" : "12.GB" )
  }
  withLabel: many_cpu_medium {
    cpus   = 1
    memory = 4.GB
  }
  withLabel: many_low_cpu_low_mem {
    cpus   = 1
    memory = 2.GB
  }
  withLabel: many_low_cpu_tiny_mem {
    cpus   = 1
    memory = 1.GB
  }
  withLabel: many_low_cpu_high_mem {
    cpus   = 1
    memory = (mem_gb_max < 8 ? "${mem_gb_max}.gb" : "8.GB" )
  } 
  withLabel: few_memory_intensive {
    cpus   = (cpu_usage_max < 8 ? cpu_usage_max : 8)
    memory = (mem_gb_max < 16 ? "${mem_gb_max}.gb" : "16.GB" )
  }
}

params{
  filtering{
    minimun_raw_length  = 1000
  }
  tidehunter{
    headerlines         = "readName\trepN\tcopyNum\treadLen\tstart\tend\tconsLen\taveMatch\tfullLen\tsubPos\tconsSeq"
    headerlinesQual     = "readName\trepN\tcopyNum\treadLen\tstart\tend\tconsLen\taveMatch\tfullLen\tsubPos\tconsSeq\tquality"
    minimum_match_ratio = 0.4
    minimum_period      = 60
    minimum_copy        = 3
    kmer_length         = 16
    primer_length       = 10
  }
  varscan{
    min_support_reads = 10
    min_var_freq = 0.001 
    min_indel_freq = 0.01
    min_mq = 20
    max_depth = 100000000
    min_coverge = 1000
    min_avg_qual = 15
    min_bqual = 15
  }
  
  minimap2parameterized{
    min_chain_score =  1
    min_chain_count = 10
    min_peak_aln_score = 20
  }
  medaka{
    depth = 1
    model = "r104_e81_sup_g5015"
    chunk_len = 100 
    chunk_ovlp = 50
    method = "spoa"
    length = 50
    batch_size = 1000
  }
}
